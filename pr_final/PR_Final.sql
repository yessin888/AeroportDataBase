CREATE TABLE AEROPUERTO(
  cod_aero VARCHAR(10) CONSTRAINT pk_Aeropuerto PRIMARY KEY CONSTRAINT nn_ccod_aero NOT NULL,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_Aer NOT NULL,
  ciudad VARCHAR(15) CONSTRAINT nn_ciudad_Aer NOT NULL,
  pais VARCHAR(15) CONSTRAINT nn_pais_Aer NOT NULL,
  capacidad NUMBER(5,0) CONSTRAINT nn_capacidad_Aer NOT NULL
);

CREATE TABLE TERMINAL(
  num_terminal NUMBER CONSTRAINT nn_Num_Terminal NOT NULL,
  capacidad NUMBER(5,0) CONSTRAINT nn_capacidad_Ter NOT NULL,
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aereo_Ter NOT NULL CONSTRAINT fk_cod_aereo_Ter REFERENCES AEROPUERTO,
  CONSTRAINT pk_Terminal PRIMARY KEY(cod_aero,num_terminal)
);

CREATE TABLE PISTA(
  num_pista NUMBER CONSTRAINT nn_num_pista NOT NULL,
  longitud NUMBER(5,2) CONSTRAINT nn_longitud_Pist NOT NULL,
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aereo_Pist NOT NULL CONSTRAINT fk_cod_aero_pista REFERENCES AEROPUERTO,
  CONSTRAINT pk_Pista PRIMARY KEY(cod_aero,num_pista)
);

CREATE TABLE PARKING(
  cod_parking VARCHAR(10) CONSTRAINT nn_codd_parking NOT NULL CONSTRAINT pk_Parking PRIMARY KEY,
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aereo_park NOT NULL CONSTRAINT fk_Parking REFERENCES AEROPUERTO,
  capacidad NUMBER(5,0) CONSTRAINT nn_capacidad_park NOT NULL,
  precio_hora NUMBER -- El parking puede ser gratuito por eso no es NOT NULL
);

CREATE TABLE TORRE_DE_CONTROL(
  num_torre NUMBER CONSTRAINT nn_num_torre NOT NULL ,
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aereo_Torre NOT NULL CONSTRAINT fk_cod_aereo_Torre REFERENCES AEROPUERTO,
  CONSTRAINT pk_Torre PRIMARY KEY(cod_aero,num_torre)
);

CREATE TABLE CONTROLADOR_AEREO(
  dni VARCHAR(9) CONSTRAINT nn_dni_controlador NOT NULL CONSTRAINT pk_Controlador PRIMARY KEY,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_controlador NOT NULL,
  apellidos VARCHAR(20) CONSTRAINT nn_apellidos_controlador NOT NULL
);

CREATE TABLE TORR_CONTR(
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aereo_TC NOT NULL,
  num_torre NUMBER CONSTRAINT nn_num_TC NOT NULL,
  dni VARCHAR(9) CONSTRAINT nn_dni_TC NOT NULL CONSTRAINT fk_TC REFERENCES CONTROLADOR_AEREO,
  CONSTRAINT fk_num_torre_TC FOREIGN KEY (num_torre,cod_aero) REFERENCES TORRE_DE_CONTROL (num_torre,cod_aero),
  CONSTRAINT pk_TC PRIMARY KEY( dni,num_torre,cod_aero)
);

CREATE TABLE AEROLINEA(
  cod_aerol VARCHAR(10) CONSTRAINT nn_cod_aerol NOT NULL CONSTRAINT pk_aerol PRIMARY KEY,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_aerol NOT NULL
);

CREATE TABLE PILOTO(
  dni VARCHAR(9) CONSTRAINT nn_dni_piloto NOT NULL CONSTRAINT pk_piloto PRIMARY KEY,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_piloto NOT NULL,
  apellidos VARCHAR(20) CONSTRAINT nn_apellidos_piloto NOT NULL,
  horas_vuelo NUMBER CONSTRAINT nn_horas_vuelo NOT NULL CONSTRAINT ck_holas_vuelo_pilo CHECK( horas_vuelo > 1500 )
);

CREATE TABLE COPILOTO(
  dni VARCHAR(9) CONSTRAINT nn_dni_copiloto NOT NULL CONSTRAINT pk_copiloto PRIMARY KEY,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_copiloto NOT NULL,
  apellidos VARCHAR(20) CONSTRAINT nn_apellidos_copiloto NOT NULL,
  horas_vuelo NUMBER CONSTRAINT nn_horas_vuelo_cop NOT NULL CONSTRAINT ck_horas_vuelo_cop CHECK( horas_vuelo > 200 AND horas_vuelo <= 1500 )
);

CREATE TABLE AVION(
  cod_avion VARCHAR(10) CONSTRAINT nn_cod_avion NOT NULL CONSTRAINT pk_avion PRIMARY KEY,
  dni_piloto VARCHAR(9) CONSTRAINT nn_dni_piloto_avion NOT NULL CONSTRAINT fk_piloto_avion REFERENCES PILOTO,
  dni_copiloto VARCHAR(9) CONSTRAINT nn_dni_copiloto_avion NOT NULL CONSTRAINT fk_copiloto_avion REFERENCES COPILOTO,
  capacidad NUMBER CONSTRAINT nn_capacidad_avion NOT NULL
);

CREATE TABLE DIRECCION(
  cp NUMBER CONSTRAINT nn_cp_direccion NOT NULL CONSTRAINT pk_direccion PRIMARY KEY,
  ciudad VARCHAR(15) CONSTRAINT nn_ciudad_direccion NOT NULL,
  pais varchar(15) CONSTRAINT nn_pais_direccion NOT NULL
);

CREATE TABLE CLIENTE(
  dni VARCHAR(9) CONSTRAINT nn_dni_cliente NOT NULL CONSTRAINT pk_cliente PRIMARY KEY,
  nombre VARCHAR(15) CONSTRAINT nn_nombre_cliente NOT NULL,
  apellidos VARCHAR(20) CONSTRAINT nn_apellidos_cliente NOT NULL,
  cp NUMBER CONSTRAINT nn_cp_cliente NOT NULL CONSTRAINT fk_direccion_cliente REFERENCES DIRECCION
);

CREATE TABLE APARCAMIENTO(
  dni VARCHAR(9) CONSTRAINT nn_dni_aparcamiento NOT NULL CONSTRAINT fk_dni_aparcamiento REFERENCES CLIENTE,
  plaza NUMBER CONSTRAINT nn_plaza NOT NULL,
  cod_parking VARCHAR(10) CONSTRAINT nn_cod_parking_aparc NOT NULL CONSTRAINT fk_cod_parking_aparc REFERENCES PARKING,
  hora_entrada NUMBER CONSTRAINT nn_hora_entrada NOT NULL,
  hora_salida NUMBER CONSTRAINT nn_hora_salida NOT NULl,
  CONSTRAINT pk_aparca PRIMARY KEY(dni,plaza,cod_parking)
);

CREATE TABLE EQUIPAJE(
  dni VARCHAR(9) CONSTRAINT nn_dni_equipaje NOT NULL CONSTRAINT fk_dni_equipaje REFERENCES CLIENTE,
  cod_equipaje VARCHAR(10)CONSTRAINT nn_cod_equipaje NOT NULL CONSTRAINT pk_cod_equipaje PRIMARY KEY,
  cod_avion VARCHAR(10)CONSTRAINT nn_cod_avion_equip NOT NULL CONSTRAINT fk_cod_avion_equipaje REFERENCES AVION,
  peso NUMBER CONSTRAINT nn_peso_equip NOT NULL,
  mascota NUMBER CONSTRAINT nn_mascota NOT NULL CONSTRAINT ck_mascota CHECK( mascota = 1 OR mascota = 0),
  bodega NUMBER CONSTRAINT nn_bodega NOT NULL CONSTRAINT ck_bodega CHECK( bodega = 1 OR bodega = 0)
);
  
CREATE TABLE VUELO(
  cod_vuelo VARCHAR(10) CONSTRAINT nn_cod_vuelo NOT NULL CONSTRAINT pk_vuelo PRIMARY KEY,
  cod_aero_origen VARCHAR(10) CONSTRAINT nn_cod_aero_orig NOT NULL ,
  cod_aero_dest VARCHAR(10) CONSTRAINT nn_cod_aero_dest NOT NULL ,
  num_pista_despegue NUMBER CONSTRAINT nn_pistaa_despegue NOT NULL,
  num_pista_aterrizaje NUMBER CONSTRAINT nn_pistaa_aterrizaje NOT NULL,
  cod_avion VARCHAR(10) CONSTRAINT nn_cod_avion_vuelo NOT NULL CONSTRAINT fk_cod_avion_vuelo REFERENCES AVION,
  hora_despegue NUMBER CONSTRAINT nn_hora_despegue_vuelo NOT NULL,
  hora_aterrizaje NUMBER CONSTRAINT nn_hora_aterrizaje_vuelo NOT NULL,
  fecha_vuelo DATE CONSTRAINT nn_fecha NOT NULL,
  CONSTRAINT fk_cod_pista_orig FOREIGN KEY(cod_aero_origen, num_pista_despegue) REFERENCES PISTA(cod_aero, num_pista),
  CONSTRAINT fk_cod_pista_aterr FOREIGN KEY(cod_aero_dest, num_pista_aterrizaje) REFERENCES PISTA(cod_aero, num_pista)
); 


CREATE TABLE PUERTA_EMBARQUE(
  cod_aero VARCHAR(10) CONSTRAINT nn_cod_aero_puerta NOT NULL ,
  num_puerta NUMBER CONSTRAINT nn_puerta NOT NULL,
  cod_vuelo VARCHAR(10) CONSTRAINT nn_cod_vuelo_puerta NOT NULL CONSTRAINT fk_vueLo_Puerta REFERENCES VUELO,
  num_terminal NUMBER CONSTRAINT nn_num_terminal_puerta NOT NULL,
  hora_embarque NUMBER CONSTRAINT nn_hora_embarque NOT NULL,
  hora_cierre NUMBER CONSTRAINT nn_hora_cierre NOT NULL,
  CONSTRAINT fk_puerta_terminal FOREIGN KEY(cod_aero, num_terminal) REFERENCES TERMINAL(cod_aero, num_terminal),
  CONSTRAINT pk_puerta_embarque PRIMARY KEY(num_terminal,cod_aero,num_puerta,cod_vuelo)
);


CREATE TABLE BILLETE(
  cod_billete VARCHAR(10) CONSTRAINT nn_cod_billete NOT NULL CONSTRAINT pk_billete PRIMARY KEY, 
  dni VARCHAR(9) CONSTRAINT nn_dni_billete NOT NULL CONSTRAINT fk_dni_billete  REFERENCES CLIENTE,
  cod_vuelo VARCHAR(10) CONSTRAINT nn_cod_vuelo_billete NOT NULL CONSTRAINT fk_billete_cod_vuelo REFERENCES VUELO,
  cod_aerol VARCHAR(10) CONSTRAINT nn_cod_aerol_billete NOT NULL CONSTRAINT fk_aerol REFERENCES AEROLINEA,
  asineto VARCHAR(4) CONSTRAINT nn_asiento NOT NULL,
  clase VARCHAR(10) CONSTRAINT nn_clase NOT NULL
);

INSERT INTO AEROPUERTO VALUES( '123456789A' , 'El Prat', 'Barcelona', 'España', 1234 );
INSERT INTO AEROPUERTO VALUES( '123456789B' , 'Aero2', 'Bilbao', 'España', 434 );
INSERT INTO AEROPUERTO VALUES( '123456789C' , 'Aero3', 'Barcelona', 'España', 2013 );
INSERT INTO AEROPUERTO VALUES( '123456789D' , 'Aero4', 'Madrid', 'España', 3450 );
INSERT INTO AEROPUERTO VALUES( '123456789E' , 'Aero5', 'Granada', 'España', 170 );
INSERT INTO AEROPUERTO VALUES( '123456789F' , 'Aereo6', 'Melilla', 'España', 256 );
INSERT INTO AEROPUERTO VALUES( '123456789G' , 'Aero7', 'Lisboa', 'Portugal', 4174 );
INSERT INTO AEROPUERTO VALUES( '123456789H' , 'Aero8', 'Valencia', 'España', 713 );
INSERT INTO AEROPUERTO VALUES( '123456789I' , 'Aero9', 'Madrid', 'España', 3550 );
INSERT INTO AEROPUERTO VALUES( '123456789J' , 'Aero10', 'Lima', 'Perú', 1701 );

INSERT INTO TERMINAL VALUES( 1, 410, '123456789A');
INSERT INTO TERMINAL VALUES( 2, 200, '123456789A');
INSERT INTO TERMINAL VALUES( 3, 670, '123456789C');
INSERT INTO TERMINAL VALUES( 4, 410, '123456789C');
INSERT INTO TERMINAL VALUES( 5, 140, '123456789B');
INSERT INTO TERMINAL VALUES( 6, 70, '123456789D');
INSERT INTO TERMINAL VALUES( 7, 410, '123456789D');
INSERT INTO TERMINAL VALUES( 1, 410, '123456789D');
INSERT INTO TERMINAL VALUES( 1, 100, '123456789B');
INSERT INTO TERMINAL VALUES( 8, 200, '123456789B');
INSERT INTO TERMINAL VALUES( 4, 80, '123456789E');
INSERT INTO TERMINAL VALUES( 1, 100, '123456789E');

INSERT INTO TERMINAL VALUES( 64, 70, '123456789I');
INSERT INTO TERMINAL VALUES( 17, 410, '123456789J');
INSERT INTO TERMINAL VALUES( 42, 410, '123456789H');
INSERT INTO TERMINAL VALUES( 17, 100, '123456789G');
INSERT INTO TERMINAL VALUES( 8, 200, '123456789F');
INSERT INTO TERMINAL VALUES( 4, 80, '123456789F');
INSERT INTO TERMINAL VALUES( 1, 100, '123456789J');


INSERT INTO PARKING VALUES('12345AA','123456789A',23,1.75);
INSERT INTO PARKING VALUES('12345ZE','123456789B',15,8.75);
INSERT INTO PARKING VALUES('12345Zaqa','123456789C',14,2);
INSERT INTO PARKING VALUES('12345Zdsd','123456789D',48,1.50);
INSERT INTO PARKING VALUES('12345ZADDE','123456789E',447,0);
INSERT INTO PARKING VALUES('12345Zsht','123456789F',74,1.42);
INSERT INTO PARKING VALUES('12345ass','123456789G',14,2);
INSERT INTO PARKING VALUES('12345wsa','123456789H',174,8.7);
INSERT INTO PARKING VALUES('12345tfg','123456789I',48,1.50);
INSERT INTO PARKING VALUES('1474wx','123456789J',54,2.5);
INSERT INTO PARKING VALUES('12345Zfrg','123456789F',447,0);
INSERT INTO PARKING VALUES('12345SSDS','123456789I',48,7.50);
INSERT INTO PARKING VALUES('1474YTT','123456789J',54,9.5);
INSERT INTO PARKING VALUES('12345ZQAS','123456789F',447,4);



INSERT INTO AEROLINEA VALUES('Aero124','Iberia');
INSERT INTO AEROLINEA VALUES('Aero125','aerolinea pepe');
INSERT INTO AEROLINEA VALUES('Aero126','nuevaee');
INSERT INTO AEROLINEA VALUES('Aero127','edea');
INSERT INTO AEROLINEA VALUES('Aero128','reca');


INSERT INTO CONTROLADOR_AEREO Values ('48395837M', 'Pepito', 'Jimenez Rodri');
INSERT INTO CONTROLADOR_AEREO Values ('34534537B', 'Jorge', 'Rodriguez Seiso');
INSERT INTO CONTROLADOR_AEREO Values ('54875237B', 'Antonio', 'Shinzo Sasageyo');
INSERT INTO CONTROLADOR_AEREO Values ('98426427P', 'Polnareff', 'Pierre');
INSERT INTO CONTROLADOR_AEREO Values ('95345427P', 'Garfios', 'Train Low');
INSERT INTO CONTROLADOR_AEREO Values ('48395839M', 'Lola', 'Pepi Son');
INSERT INTO CONTROLADOR_AEREO Values ('34534523B', 'Jojo', 'Bizarre Adventua');
INSERT INTO CONTROLADOR_AEREO Values ('54875237T', 'Eren', 'Yeager');
INSERT INTO CONTROLADOR_AEREO Values ('98426427Q', 'Mikasa', 'Ackerman');
INSERT INTO CONTROLADOR_AEREO Values ('95543542K', 'Levi', 'Ackerman');

Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789A');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789A');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789B');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789B');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789C');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789C');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789D');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789D');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789E');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789E');

Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789F');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789G');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789H');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789I');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (1, '123456789J');
Insert into TORRE_DE_CONTROL(num_torre, cod_aero) 
Values (2, '123456789F');

INSERT INTO TORR_CONTR VALUES('123456789A', 1, '48395837M');
INSERT INTO TORR_CONTR VALUES('123456789A', 2, '34534537B');
INSERT INTO TORR_CONTR VALUES('123456789B', 1, '54875237B');
INSERT INTO TORR_CONTR VALUES('123456789B', 2, '98426427P');
INSERT INTO TORR_CONTR VALUES('123456789C', 1, '95345427P');
INSERT INTO TORR_CONTR VALUES('123456789C', 2, '48395839M');
INSERT INTO TORR_CONTR VALUES('123456789D', 1, '34534523B');
INSERT INTO TORR_CONTR VALUES('123456789D', 2, '54875237T');
INSERT INTO TORR_CONTR VALUES('123456789E', 1, '98426427Q');
INSERT INTO TORR_CONTR VALUES('123456789E', 1, '95543542K');

INSERT INTO PILOTO VALUES('98765432A','Juan', 'Dominguez',1700);
INSERT INTO PILOTO VALUES('98765432B','Pepe', 'Romero',3500);
INSERT INTO PILOTO VALUES('98765432Q','Luis', 'Porro',1700);
INSERT INTO PILOTO VALUES('98765432C','Pablo', 'Casado',2400);
INSERT INTO PILOTO VALUES('98765432F','Roberto', 'Salinas',1900);
INSERT INTO PILOTO VALUES('98765432J','Juan', 'Alberto',7400);
INSERT INTO PILOTO VALUES('98765432L','Macarena', 'Pedraza',1600);

INSERT INTO COPILOTO VALUES('41765432A','Carlos', 'Requena',411);
INSERT INTO COPILOTO VALUES('42765432B','Alejandro', 'Nuñez',350);
INSERT INTO COPILOTO VALUES('43765432Q','Frank', 'Pablo',870);
INSERT INTO COPILOTO VALUES('44765432C','Yoel', 'Balboa',1400);
INSERT INTO COPILOTO VALUES('45765432F','Cloe', 'Salinas',900);
INSERT INTO COPILOTO VALUES('46765432J','Sara', 'Lopez',1400);
INSERT INTO COPILOTO VALUES('47765432L','Magdalena', 'Torres',600);

INSERT INTO AVION VALUES('55qwerty1','98765432A','41765432A',412);
INSERT INTO AVION VALUES('55qwerty2','98765432A','42765432B',100);
INSERT INTO AVION VALUES('55qwerty3','98765432B','41765432A',712);
INSERT INTO AVION VALUES('55qwerty4','98765432Q','47765432L',141);
INSERT INTO AVION VALUES('55qwerty5','98765432C','46765432J',192);
INSERT INTO AVION VALUES('55qwerty6','98765432F','43765432Q',71);
INSERT INTO AVION VALUES('55qwerty7','98765432J','41765432A',541);
INSERT INTO AVION VALUES('55qwerty8','98765432L','44765432C',312);
INSERT INTO AVION VALUES('55qwerty9','98765432C','45765432F',240);

INSERT INTO PISTA VALUES(1,69,'123456789A');
INSERT INTO PISTA VALUES(2,45,'123456789A');
INSERT INTO PISTA VALUES(3,19,'123456789A');
INSERT INTO PISTA VALUES(4,90,'123456789A');
INSERT INTO PISTA VALUES(5,77,'123456789A');
INSERT INTO PISTA VALUES(1,69,'123456789B');
INSERT INTO PISTA VALUES(2,156,'123456789B');
INSERT INTO PISTA VALUES(3,19,'123456789B');
INSERT INTO PISTA VALUES(4,90,'123456789B');
INSERT INTO PISTA VALUES(5,77,'123456789B');
INSERT INTO PISTA VALUES(1,69,'123456789C');
INSERT INTO PISTA VALUES(2,45,'123456789C');
INSERT INTO PISTA VALUES(3,89,'123456789C');
INSERT INTO PISTA VALUES(4,90,'123456789C');
INSERT INTO PISTA VALUES(5,77,'123456789C');
INSERT INTO PISTA VALUES(1,69,'123456789D');
INSERT INTO PISTA VALUES(2,45,'123456789D');
INSERT INTO PISTA VALUES(3,969,'123456789D');
INSERT INTO PISTA VALUES(4,90,'123456789D');
INSERT INTO PISTA VALUES(5,77,'123456789D');
INSERT INTO PISTA VALUES(1,69,'123456789E');
INSERT INTO PISTA VALUES(2,45,'123456789E');
INSERT INTO PISTA VALUES(3,59,'123456789E');
INSERT INTO PISTA VALUES(4,50,'123456789E');
INSERT INTO PISTA VALUES(5,77,'123456789E');

INSERT INTO PISTA VALUES(2,45,'123456789F');
INSERT INTO PISTA VALUES(3,969,'123456789F');
INSERT INTO PISTA VALUES(4,90,'123456789G');
INSERT INTO PISTA VALUES(5,77,'123456789G');
INSERT INTO PISTA VALUES(1,69,'123456789H');
INSERT INTO PISTA VALUES(2,45,'123456789I');
INSERT INTO PISTA VALUES(3,59,'123456789J');
INSERT INTO PISTA VALUES(4,50,'123456789J');
INSERT INTO PISTA VALUES(5,77,'123456789I');

INSERT INTO DIRECCION VALUES(35346,'Málaga','España');
INSERT INTO DIRECCION VALUES(89046,'Melilla','España');
INSERT INTO DIRECCION VALUES(36690,'HuevoLand','Alemania');
INSERT INTO DIRECCION VALUES(87685,'Frankfurt','Alemania');
INSERT INTO DIRECCION VALUES(35334,'Atraction','PolnareffLand');
INSERT INTO DIRECCION VALUES(11122,'Melilla','España');
INSERT INTO DIRECCION VALUES(22232,'Everlast','EEUU');
INSERT INTO DIRECCION VALUES(33334,'New York','EEUU');
INSERT INTO DIRECCION VALUES(72237,'Japón','Tokyo');
INSERT INTO DIRECCION VALUES(73334,'Japón','Osaka');

INSERT INTO CLIENTE VALUES('79042656M','Gumersindo','Requena',35346);
INSERT INTO CLIENTE VALUES('45645645K','Nuria','Sarmiento',89046);
INSERT INTO CLIENTE VALUES('12345454O','Ruth','Santos',36690);
INSERT INTO CLIENTE VALUES('64367395I','Ibrahim','Oliva',87685);
INSERT INTO CLIENTE VALUES('88885468U','Luciana','Saavedra',35334);
INSERT INTO CLIENTE VALUES('12222323G','Teresa','Badia',11122);
INSERT INTO CLIENTE VALUES('88878678Q','Evaristo','Andujar',22232);
INSERT INTO CLIENTE VALUES('77776661S','Alexandra','Bello',33334);
INSERT INTO CLIENTE VALUES('99998888Z','Santos','Sanjuan',72237);
INSERT INTO CLIENTE VALUES('00092313X','Felisa','Estevez',73334);
INSERT INTO CLIENTE VALUES('63463498H','Rem','Waifu',72237);
INSERT INTO CLIENTE VALUES('11122233J','Tohru','DragonMaid',73334);
INSERT INTO CLIENTE VALUES('75475437B','Nagatoro','Hayase',73334);
INSERT INTO CLIENTE VALUES('77773778H','Chika','Fujiwara',72237);

INSERT INTO VUELO VALUES( 'jujuju1123', '123456789A', '123456789B', 1, 2, '55qwerty1', 18 , 23,'13/12/2005');
INSERT INTO VUELO VALUES( 'jujuju1124', '123456789B', '123456789D', 3, 3, '55qwerty2', 14 , 18,'13/10/2017');
INSERT INTO VUELO VALUES( 'jujuju1125', '123456789C', '123456789E', 4, 5, '55qwerty1', 19 , 22,'03/11/2015');
INSERT INTO VUELO VALUES( 'jujuju1126', '123456789D', '123456789I', 1, 2, '55qwerty3', 08 , 13,'13/08/20020');
INSERT INTO VUELO VALUES( 'jujuju1127', '123456789D', '123456789J', 2, 3, '55qwerty4', 09 , 13,'17/02/2009');
INSERT INTO VUELO VALUES( 'jujuju1128', '123456789E', '123456789D', 2, 4, '55qwerty8', 10 , 17,'13/11/2019');
INSERT INTO VUELO VALUES( 'jujuju1129', '123456789E', '123456789F', 2, 3, '55qwerty9', 11 , 17,'05/04/2015');
INSERT INTO VUELO VALUES( 'jujuju1120', '123456789F', '123456789I', 3, 2, '55qwerty7', 14 , 21,'15/12/2008');
INSERT INTO VUELO VALUES( 'jujuju1110', '123456789F', '123456789H', 3, 1, '55qwerty6', 19 , 21,'18/10/2016');
INSERT INTO VUELO VALUES( 'jujuju1111', '123456789G', '123456789F', 4, 3, '55qwerty5', 17 , 19,'19/12/2020');
INSERT INTO VUELO VALUES( 'jujuju1117', '123456789H', '123456789A', 1, 5, '55qwerty4', 11 , 20,'13/10/2022');
INSERT INTO VUELO VALUES( 'jujuju1187', '123456789I', '123456789B', 5, 4, '55qwerty2', 12 , 23,'18/12/2021');
INSERT INTO VUELO VALUES( 'jujuju1174', '123456789H', '123456789B', 1, 2, '55qwerty3', 12 , 15,'13/12/20021');

INSERT INTO VUELO VALUES( 'jujuju1145', '123456789F', '123456789E', 3, 4, '55qwerty2', 12 , 23,'14/12/2021');
INSERT INTO VUELO VALUES( 'jujuju1164', '123456789I', '123456789B', 5, 2, '55qwerty3', 12 , 15,'14/12/2021');

INSERT INTO PUERTA_EMBARQUE VALUES('123456789A',1,'jujuju1123',1,15,17);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789B',2,'jujuju1124',1,11,13);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789C',3,'jujuju1125',3,17,21);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789D',1,'jujuju1126',1,06,07);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789D',7,'jujuju1127',1,07,08);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789E',4,'jujuju1128',4,08,09);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789E',1,'jujuju1129',1,09,10);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789F',1,'jujuju1120',8,12,13);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789F',8,'jujuju1110',8,17,19);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789G',1,'jujuju1111',17,15,16);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789H',1,'jujuju1117',42,09,10);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789I',3,'jujuju1187',64,10,11);
INSERT INTO PUERTA_EMBARQUE VALUES('123456789H',11,'jujuju1174',42,10,11);


INSERT INTO EQUIPAJE VALUES('79042656M','ds34fds','55qwerty1',2, 1, 0);
INSERT INTO EQUIPAJE VALUES('79042656M','ds34fdt','55qwerty1',5, 1, 0);
INSERT INTO EQUIPAJE VALUES('45645645K','53g435g','55qwerty2',45, 1, 0);
INSERT INTO EQUIPAJE VALUES('12345454O','6gdg345','55qwerty3',56, 1, 1);
INSERT INTO EQUIPAJE VALUES('64367395I','gjkg332','55qwerty4',77, 0, 1);
INSERT INTO EQUIPAJE VALUES('88885468U','niiis35','55qwerty5',12, 0, 1);
INSERT INTO EQUIPAJE VALUES('12222323G','87fd3xb','55qwerty6',13, 0, 0);
INSERT INTO EQUIPAJE VALUES('88878678Q','000ed2v','55qwerty7',3, 0, 0);
INSERT INTO EQUIPAJE VALUES('77776661S','564hgmj','55qwerty8',5, 1, 1);
INSERT INTO EQUIPAJE VALUES('99998888Z','6nhgh56','55qwerty9',60, 1, 1);
INSERT INTO EQUIPAJE VALUES('00092313X','htr45y5','55qwerty9',12, 1, 1);

INSERT INTO APARCAMIENTO VALUES ('79042656M', 1, '12345AA', 5, 12);
INSERT INTO APARCAMIENTO VALUES ('45645645K', 4, '12345ZE', 8, 17);
INSERT INTO APARCAMIENTO VALUES ('12345454O', 6, '12345Zaqa', 8, 14);
INSERT INTO APARCAMIENTO VALUES ('64367395I', 9, '12345Zdsd', 8, 13);
INSERT INTO APARCAMIENTO VALUES ('88885468U', 1, '12345ZADDE', 9, 19);
INSERT INTO APARCAMIENTO VALUES ('12222323G', 3, '12345Zsht', 12, 18);
INSERT INTO APARCAMIENTO VALUES ('88878678Q', 45, '12345ass', 15, 17);
INSERT INTO APARCAMIENTO VALUES ('77776661S', 234, '12345wsa', 4, 9);
INSERT INTO APARCAMIENTO VALUES ('99998888Z', 887, '12345tfg', 1, 6);
INSERT INTO APARCAMIENTO VALUES ('00092313X', 343, '1474wx', 18, 23);
INSERT INTO APARCAMIENTO VALUES ('63463498H', 18, '12345Zfrg', 10, 20);
INSERT INTO APARCAMIENTO VALUES ('11122233J', 17, '12345Zfrg', 11, 21);
INSERT INTO APARCAMIENTO VALUES ('75475437B', 16, '12345Zfrg', 12, 22);
INSERT INTO APARCAMIENTO VALUES ('63463498H', 14, '12345SSDS', 12, 20);
INSERT INTO APARCAMIENTO VALUES ('11122233J', 28, '1474YTT', 14, 21);
INSERT INTO APARCAMIENTO VALUES ('75475437B', 13, '12345ZQAS', 19, 22);

INSERT INTO BILLETE VALUES('bill-10015', '63463498H', 'jujuju1187', 'Aero124', '1', 'BASIC');
INSERT INTO BILLETE VALUES('bill-10241', '75475437B', 'jujuju1123', 'Aero125', '3', 'BASIC');
INSERT INTO BILLETE VALUES('bill-00402', '79042656M', 'jujuju1124', 'Aero125', '4', 'BASIC');
INSERT INTO BILLETE VALUES('bill-12341', '45645645K', 'jujuju1125', 'Aero126', '5', 'BASIC');
INSERT INTO BILLETE VALUES('bill-16634', '64367395I', 'jujuju1127', 'Aero126', '43', 'BASIC');
INSERT INTO BILLETE VALUES('bill-17741', '88885468U', 'jujuju1128', 'Aero128', '34', 'BASIC');
INSERT INTO BILLETE VALUES('bill-08802', '12222323G', 'jujuju1129', 'Aero127', '23', 'PREMIUM');
INSERT INTO BILLETE VALUES('bill-19941', '88878678Q', 'jujuju1120', 'Aero127', '45', 'BASIC');
INSERT INTO BILLETE VALUES('bill-97741', '77776661S', 'jujuju1110', 'Aero126', '56', 'BASIC');
INSERT INTO BILLETE VALUES('bill-98802', '99998888Z', 'jujuju1111', 'Aero126', '67', 'PREMIUM');
INSERT INTO BILLETE VALUES('bill-99941', '00092313X', 'jujuju1117', 'Aero127', '87', 'PREMIUM');
INSERT INTO BILLETE VALUES('bill-99942', '77773778H', 'jujuju1117', 'Aero128', '99', 'PREMIUM');


--CREACION DE VISTAS

      
CREATE VIEW BILLETE_DE_AVION AS 
    SELECT c1.dni, c1.nombre, c1.apellidos, v1.cod_aero_origen, v1.cod_aero_dest, v1.hora_despegue,
    v1.hora_aterrizaje, b1.asineto, b1.clase, v1.cod_vuelo, b1.cod_billete  FROM  CLIENTE c1, BILLETE b1, VUELO v1
    WHERE v1.Cod_Vuelo = b1.Cod_Vuelo AND b1.dni = c1.dni ORDER BY dni;
  
CREATE VIEW CHECK_IN AS
    SELECT DISTINCT p1.cod_vuelo, b1.cod_billete, p1.num_terminal, p1.num_puerta, p1.hora_embarque, p1.hora_cierre, b1.asineto, b1.clase
    FROM PUERTA_EMBARQUE p1, BILLETE b1 WHERE p1.cod_vuelo = b1.cod_vuelo ORDER BY p1.hora_embarque;
    
CREATE VIEW GESTION_VUELO AS
   SELECT v1.cod_vuelo, v1.cod_aero_origen,v1.cod_aero_dest, v1.num_pista_despegue "PISTA DE DESPEGUE ORIGEN", 
      v1.num_pista_aterrizaje, v1.hora_despegue, v1.hora_aterrizaje, v1.cod_avion, av1.dni_piloto, av1.dni_copiloto
      FROM VUELO v1, AVION av1
      WHERE v1.cod_avion = av1.cod_avion  ORDER BY v1.hora_despegue;

CREATE VIEW APARCAMIENTOS AS
    SELECT c1.dni, c1.nombre, c1.apellidos, a1.ciudad, p1.cod_parking, ap1.hora_entrada, ap1.hora_salida 
    FROM CLIENTE c1, AEROPUERTO a1, PARKING p1, APARCAMIENTO ap1 
    WHERE c1.dni = ap1.dni AND a1.cod_aero = p1.cod_aero AND p1.cod_parking = ap1.cod_parking ORDER BY hora_entrada;



--SENTENCIAS SQL
                    
                    
--Listado de pasajeros que poseen mascotas en determinado avión. SQL 1
SELECT e.dni, c.nombre, c.apellidos FROM CLIENTE c, EQUIPAJE e, AVION a 
        WHERE (e.dni = c.dni) AND (e.cod_avion = '55qwerty9') AND (e.MASCOTA = 1) GROUP by e.dni, c.nombre, c.apellidos;

--Se ha encontrado un equipaje(sabiendo su cod) con una bomba con temporizador, dado este suceso se desea averiguar el nombre de la persona y el aeropuerto de origen 
--que no detectó la bomba en busca de cómplices además de incluir otros posibles equipajes de la persona. SQL 2
SELECT c.nombre, c.apellidos, a.nombre FROM 
CLIENTE c, VUELO v, BILLETE b, AEROPUERTO a, AVION av, EQUIPAJE e 
WHERE e.dni = c.dni AND a.cod_aero 
IN (SELECT cod_aero_origen FROM VUELO 
WHERE cod_avion = e.cod_avion AND e.cod_equipaje = 'ds34fds') 
GROUP by c.nombre, c.apellidos, a.nombre;


-- SELECCIONA LOS VUELOS QUE SE HAN HECHO EN EL MISMO DÍA . SQL 3
SELECT AV.COD_AVION, AV2.COD_AVION "COD_AVION 2", AV.FECHA_VUELO 
  FROM VUELO AV, VUELO AV2 WHERE AV.FECHA_VUELO = AV2.FECHA_VUELO AND AV.COD_AVION < AV2.COD_AVION;

-- EL CLIENTE '79042656M' EN EL PARKING '12345AA' Y PLAZA 1 HA SOLICITADO LA SALIDA DEL PARKING. CALCULA CUANTO LE HA COSTADO EL APARCAMIENTO 5 . SQL 4
SELECT (HORA_SALIDA - HORA_ENTRADA)* (SELECT PRECIO_HORA FROM PARKING WHERE COD_PARKING =  '12345AA' ) "TOTAL A PAGAR" FROM APARCAMIENTO 
      WHERE PLAZA = 1 AND DNI = '79042656M' AND COD_PARKING =  '12345AA' ;


--SELECCIONA EL PARKING CON MAYOR CAPACIDAD .SQL 5
SELECT COD_PARKING,CAPACIDAD FROM PARKING  WHERE CAPACIDAD IN (SELECT MAX(CAPACIDAD) FROM PARKING);

--CUANTOS VUELOS SE HAN REALIZADO EN 2015. SQL 6
SELECT COUNT(COD_VUELO)"VUELOS EN 2015" FROM VUELO WHERE FECHA_VUELO BETWEEN '01/01/2015' AND '31/12/2015';

--HA LLEGADO AL OIDO DEL DUEÑO  DEL PARKING '12345ZADDE' QUE MUCHOS
--DE SUS CLIENTES LLEGAN TARDE A SUS VUELOS DEBIDO AL TRAFICO QUE SUFRE SU PARKING.
--ES POR ELLO QUE ESTE HA DECIDIDO COMPENSAR DE ALGUNA FORMA A AQUELLOS CLIENTES QUE ENTRARON AL PARKING TARDE RESPECTO A SU HORA DE EMBARQUE
-- SELECCIONA  A AQUELLOS CLIENTES QUE ENTRARON AL PARKING TARDE RESPECTO A SU HORA DE EMBARQUE. JOIN SQL 7
SELECT C1.DNI,C1.NOMBRE,C1.APELLIDOS,C1.CP "CP Vivienda Cliente",D1.CIUDAD "CIUDAD CLIENTE", D1.PAIS "PAÍS CLIENTE", AP.PLAZA,AP.COD_PARKING 
  FROM CLIENTE C1,APARCAMIENTO AP, DIRECCION D1 WHERE C1.DNI = AP.DNI AND AP.COD_PARKING = '12345ZADDE'
  AND D1.CP = C1.CP AND AP.HORA_ENTRADA > 
    (SELECT HORA_EMBARQUE FROM PUERTA_EMBARQUE WHERE COD_VUELO IN 
      (SELECT COD_VUELO FROM BILLETE BIL WHERE BIL.DNI =  C1.DNI))    
      ORDER BY C1.DNI;

-- SELECCIONA DIFERENTES DATOS RELACIONADOS CON UN VUELO. JOIN SQL 8
SELECT V1.COD_VUELO, V1.COD_AERO_ORIGEN, PE1.NUM_PUERTA "PUERTA DE EMBARQUE", 
      PE1.HORA_EMBARQUE, A1.NOMBRE "NOMBRE AEROPUERTO" , A1.CIUDAD "CIUDAD ORIGEN" ,
      T1.NUM_TORRE "TORRE ASIGNADA" FROM VUELO V1, PUERTA_EMBARQUE PE1, AEROPUERTO A1, TORRE_DE_CONTROL T1 
      WHERE V1.COD_VUELO = PE1.COD_VUELO AND V1.COD_AERO_ORIGEN = A1.COD_AERO AND T1.COD_AERO = A1.COD_AERO;

--SELECCIONA DATOS RELACIONADOS CON LOS DIFERENTES APARCAMIENTOS . JOIN    SQL 9  
SELECT A1.PAIS, A1.CIUDAD, P1.COD_PARKING, P1.PRECIO_HORA, AP1.PLAZA, AP1.DNI, C1.NOMBRE, C1.APELLIDOS, AP1.HORA_ENTRADA, AP1.HORA_SALIDA
      FROM AEROPUERTO A1, PARKING P1, APARCAMIENTO AP1, CLIENTE C1 
      WHERE A1.COD_AERO = P1.COD_AERO AND P1.COD_PARKING = AP1.COD_PARKING AND AP1.DNI = C1.DNI ORDER BY AP1.HORA_ENTRADA;


--SELECT SOBRE VIEW    

--MUESTRA EL CHECK IN DE LOS VUELOS MÁS LARGOS SQL 10
SELECT * FROM CHECK_IN WHERE COD_VUELO IN 
    (SELECT COD_VUELO FROM VUELO WHERE (HORA_ATERRIZAJE - HORA_DESPEGUE) IN  
        (SELECT MAX(HORA_ATERRIZAJE-HORA_DESPEGUE) FROM VUELO));

--SELECCIONA LOS BILLETES DE LAS PERSONAS QUE VIVEN EN ALEMANIA SQL 11
SELECT * FROM BILLETE_DE_AVION WHERE DNI IN 
  (SELECT DNI FROM CLIENTE WHERE CP IN 
    (SELECT CP FROM DIRECCION WHERE PAIS = 'Alemania'));

--EN UN AVIÓN SE TRANSPORTABA UN ÓRGANO QUE IBA A SER TRANSPLANTADO,PERO HUBO UN ACCIDENTE POR CULPA DE LA GESTIÓN DEL VUELO,
--YA QUE ESTE ACABÓ ATERRIZANDO EN OTRO LUGAR. MUESTRA LOS DATOS DEL VUELO ASOCIADO A ESE ÓRGANO( EQUIPAJE = 'gjkg332')
--PARA VER QUÉ HA PODIDO PASAR SQL 12
SELECT * FROM GESTION_VUELO WHERE COD_AVION IN
    ( SELECT COD_AVION FROM EQUIPAJE WHERE cod_avion = '55qwerty5' );

--MUESTRA LOS APARCAMIENTOS QUE SE HAN REALIZADO EN EL PARKING MÁS CARO SQL 13
SELECT * FROM APARCAMIENTO WHERE COD_PARKING IN 
    ( SELECT COD_PARKING FROM PARKING WHERE PRECIO_HORA IN 
        (SELECT MAX(PRECIO_HORA) FROM PARKING));

-- SE DESEA CONOCER CUALES SON LOS BILLETES MÁS CAROS QUE SE HAN ALMACENADO EN LA BASE DE DATOS.
--ESTOS SON LOS DE CLASE PREMIUM O LOS DEL AÑO 2015 SQL 14
SELECT * FROM BILLETE_DE_AVION WHERE COD_VUELO IN 
  (SELECT COD_VUELO FROM VUELO WHERE FECHA_VUELO between '01/01/2015' AND '31/12/2015' ) OR CLASE = 'PREMIUM';

--SE QUIERE JUNTAR A PILOTOS EXPERIMENTADOS CON COPILOTOS POCO EXPERIMENTADOS PARA QUE ESTOS APRENDAN DE ELLOS. SQL 15
(SELECT * FROM PILOTO WHERE HORAS_VUELO > 2500) UNION (SELECT * FROM COPILOTO WHERE HORAS_VUELO < 900);

--SELECCIONA EL BILLETE DE LAS PERSONAS QUE HAN APARCADO EN EL PARKING DEL AEROPUERTO '123456789E' SQL 16
SELECT COD_BILLETE,DNI,cod_vuelo FROM BILLETE WHERE DNI IN 
    ( SELECT DNI FROM APARCAMIENTO WHERE cod_parking IN 
        (SELECT COD_PARKING  FROM PARKING WHERE COD_AERO = '123456789E'));
        
--CALCULA LA MEDIA DEL PRECIO DE PARKING DE CADA AEROPUERTO DE ESPAÑA SQL 17
SELECT AVG(PRECIO_HORA),COD_AERO FROM PARKING WHERE COD_AERO IN ( SELECT COD_AERO FROM AEROPUERTO WHERE PAIS = 'España') GROUP BY cod_aero;

-- CALCULA EL PRECIO MEDIO DE LOS PARKINGS SQL 18
SELECT AVG(PRECIO_HORA) FROM PARKING GROUP BY COD_PARKING;

/*Aquellos pilotos con más aviones asignados y vuelos reciben un regalo de compensación.
Sin embargo, se deben haber volado más de 1 avion(es 1 por los datos que tenemos, podría ser más) en un día SQL 19 */
SELECT p.nombre, p.dni 
FROM PILOTO p 
WHERE 1 < (SELECT COUNT(DNI_PILOTO) 
FROM AVION a WHERE p.dni = a.dni_piloto) 
GROUP by p.nombre, p.dni;

/*Ciertas pistas de aterrizaje necesitan ser anuladas por mantenimiento en el aeropuerto con código 123456789D. 
Entonces debemos filtrar aquellas pistas que midan menos de 80 dado que necesitan mantenimiento para implementar ciertas mejoras SQL 20*/
(SELECT num_pista
FROM PISTA WHERE cod_aero = '123456789D') MINUS (SELECT num_pista 
FROM PISTA 
WHERE longitud < 80 AND cod_aero = '123456789D');

/*Mostrar el piloto con más horas de vuelo junto a sus horas totales, para asignarle una condecoración SQL 21*/
SELECT nombre||' '||apellidos "Nombre completo", SUM(horas_vuelo) "HORAS DE VUELO" 
FROM PILOTO 
GROUP BY nombre||' '||apellidos, dni 
HAVING SUM(horas_vuelo) 
IN (SELECT MAX(SUM(horas_vuelo)) 
FROM PILOTO GROUP by dni);

/*Mostrar el piloto con más horas de vuelo junto a sus horas totales, para asignarle una condecoración, aún así debe superar 2000 horas como requisito SQL 22*/
SELECT nombre||' '||apellidos "Nombre completo", SUM(horas_vuelo) "HORAS DE VUELO" 
FROM PILOTO 
GROUP BY nombre||' '||apellidos, dni 
HAVING SUM(horas_vuelo) 
IN (SELECT MAX(SUM(horas_vuelo)) 
FROM PILOTO GROUP by dni HAVING SUM(horas_vuelo) > 2000);

/*En pos de una mejora en las ventas de billetes, se buscan parejas de clientes para ofrecer a distintas aerolíneas. 
La idea es emparejarlos por misma ciudad y generar distintas parejas para que participen mutuamente en la oferta de "Amigo desconocido, por un viaje mejor" SQL 23*/
SELECT c1.nombre, c2.nombre FROM CLIENTE c1, CLIENTE c2 WHERE c1.nombre < c2.nombre AND (SELECT ciudad FROM DIRECCION WHERE cp = c1.cp) = (SELECT ciudad FROM DIRECCION WHERE cp = c2.cp);

/*La aerolínea Iberia ha sido denunciada por retransmitir en su canal oficial de Twitch archivos de procedencia dudosa sobre blanqueos y robos en el negocio de la aeronáutica. 
Es por eso que hay que filtrar y sacar los datos de vuelo que tengan relación con la compañía así pudiendo contactar y detener dichos vuelos SQL 24*/
SELECT v.cod_vuelo, v.cod_aero_origen, v.cod_aero_dest, v.num_pista_despegue, v.num_pista_aterrizaje, v.cod_avion, v.fecha_vuelo 
FROM VUELO v, BILLETE b, AEROLINEA a 
WHERE v.cod_vuelo = b.cod_vuelo AND b.cod_aerol 
IN (SELECT cod_aerol FROM AEROLINEA where nombre = 'Iberia') 
GROUP BY v.cod_vuelo, v.cod_aero_origen, v.cod_aero_dest, v.num_pista_despegue, v.num_pista_aterrizaje, v.cod_avion, v.fecha_vuelo;


-- EL VUELO 'jujuju1110' TIENE PLAZAS LIBRES, POR LO QUE SE HA DECIDIDO SORTEAR 
--ENTRE LOS CLIENTES(CLIENTES DE TODA LA BBDD) QUE VIVEN EN LA MISMA CIUDAD QUE EL AEROPUERTO DE ORIGEN UN BILLETE PARA ÉL O UN FAMILIAR
--> SELECCIONA LOS CLIENTES QUE TIENEN CIUDAD DE DIRECCION = CIUDAD DEL AEROPUERTO DE ORIGEN('jujuju1110'). SQL 25

SELECT * FROM CLIENTE WHERE CP IN 
    ( SELECT CP FROM DIRECCION WHERE CIUDAD IN 
        ( SELECT CIUDAD FROM AEROPUERTO WHERE COD_AERO IN 
            (SELECT COD_AERO_ORIGEN FROM VUELO WHERE COD_VUELO ='jujuju1110')));

-- SE QUIERE SANCIONAR A LAS PERSONAS QUE PRODUCEN UNA GRAN HUELLA DE CARBONO.
--LA ÚNICA FORMA QUE SE TIENE DE DETECTARLOS ES VIENDO QUIENES APARCAN MÁS DE N VECES.
--> SELECCIONA LAS PERSONAS QUE HAN APARCADO MÁS DE N VECES EN CUALQUIER PARKING. SQL  26
SELECT DNI, COUNT(DNI) FROM APARCAMIENTOS HAVING COUNT(DNI) > 1 GROUP BY DNI  ;


/*El Controlador aéreo Eren Yeager(54875237T) ha asesinado al oficial Reiner en su torre de control, es por eso que se necesita buscar con su DNI la torre en la que ha trabajado y los datos del aeropuerto
para poder tramitar la detención a nivel internacional. Buscar torre donde trabaja Eren Yeager junto a nombre de aeropuerto SQL 27*/ 
SELECT t.num_torre, a.nombre 
FROM TORRE_DE_CONTROL t, TORR_CONTR tr, AEROPUERTO a 
WHERE tr.dni = '54875237T' AND t.num_torre = tr.num_torre AND a.cod_aero = tr.cod_aero 
GROUP BY t.num_torre, a.nombre;


--SENTENCIAS DE UPDATE

-- ACTUALIZA A 25 EL PRECIO DEL PARKING QUE TIENE MÁS APARCAMIENTOS
UPDATE PARKING SET PRECIO_HORA = 25  WHERE cod_parking IN( 
                SELECT COD_PARKING FROM APARCAMIENTO HAVING COUNT(COD_PARKING) IN 
                      (SELECT MAX(COUNT(COD_PARKING)) FROM APARCAMIENTO GROUP BY COD_PARKING) GROUP BY COD_PARKING);
                      
-- EL AVIÓN '55qwerty2' SE ENFRENTARÁ A UN VUELO DIFÍCIL, POR LO QUE ES NECESARIO MODIFICAR EL PILOTO POR EL MÁS EXPERIMENTADO DE LA PLANTILLA
UPDATE AVION SET DNI_PILOTO =
                (SELECT DNI FROM PILOTO HAVING MAX(HORAS_VUELO) IN (SELECT MAX(HORAS_VUELO) FROM PILOTO ) GROUP BY DNI ) 
                    WHERE COD_AVION = '55qwerty2';
                    
-- EL AVIÓN '55qwerty9' TIENE LA BODEGA LLENA DEBIDO A QUE LOS EQUIPAJES PESAN MUCHO,PARA REDUCIR LA CARGA
    --SE VA A ALMACENAR EN LA PARTE TRASERA DEL AVIÓN EL EQUIPAJE MAS PESADO
UPDATE EQUIPAJE SET BODEGA = 0 WHERE COD_EQUIPAJE = (
      SELECT COD_EQUIPAJE FROM EQUIPAJE WHERE PESO IN
                                        (SELECT MAX(PESO) FROM EQUIPAJE WHERE COD_AVION ='55qwerty9')
);

--LA EMPRESA IBERIA Y EDEA SE HAN FUSIONADO, ES POR ELLO QUE AHORA LOS BILLETES
--QUE HA VENDIDO EDEA TIENEN QUE PASAR A CARGO DE IBERIA(PONERLE EL COD_AEROL DE IBERIA A LAS AEROLINEA EDEA
UPDATE BILLETE SET COD_AEROL = (SELECT COD_AEROL FROM AEROLINEA WHERE NOMBRE = 'Iberia') WHERE cod_aerol = 'Aero127';

--SENTENCIAS DE DELETE
  
--El vuelo 'jujuju1123' por  razones desconocidas los vuelos con destino el aeropuerto '123456789J' no tendrá pasajeros, 
  --por tanto es necesario devolverle a los clientes su dinero (borrar billetes de ese vuelo)  
DELETE FROM BILLETE WHERE COD_VUELO IN 
  (SELECT COD_VUELO FROM VUELO WHERE COD_AERO_DEST = '123456789J');

-- SE HA BETADO A LOS PASAJEROS DE EEUU POR TANTO HAY QUE BORRAR SUS BILLETES
DELETE FROM BILLETE WHERE DNI IN (SELECT DNI FROM CLIENTE WHERE CP IN (SELECT CP FROM DIRECCION WHERE PAIS = 'EEUU') );

-- SE DESEA HACER LIMPIEZA EN LA BBDD ES POR ELLO QUE SE DESEA BORRAR LOS BILLETES DE LOS VUELOS REALIZADO EN 2005
DELETE FROM BILLETE WHERE COD_VUELO IN 
  (SELECT COD_VUELO FROM VUELO WHERE FECHA_VUELO >= '01/01/2005' AND FECHA_VUELO <= '31/12/2005' );

--EL VUELO CON ORIGEN '123456789D' YA SE HA REALIZADO, POR LO QUE HAY QUE DESPEJAR LOS APARCAMIENTOS DE SUS CLIENTES
DELETE FROM APARCAMIENTO WHERE DNI IN
  (SELECT DNI FROM BILLETE WHERE COD_VUELO IN (SELECT cod_vuelo FROM VUELO WHERE COD_AERO_ORIGEN ='123456789D'));

--SENTENCIAS DE INSERCIÓN

--LOS COPILOTOS CON 1400 HORAS DE VUELO SON SOMETIDOS A UN CURSO 
--INTENSIVO DE VUELO  PARA QUE PUEDAN ASCENDER A PILOTOS, ES POR ELLO QUE AHORA HAY QUE REGISTRARLOS COMO PILOTOS CON 1501 HORAS DE VUELO
INSERT INTO PILOTO ((SELECT dni,nombre,apellidos,1501 FROM COPILOTO WHERE DNI IN
                                  (SELECT DNI FROM COPILOTO WHERE HORAS_VUELO = 1400)));

-- EL AVIÓN '' SE ENCUENTRA FUERA DE SERVICIO, POR LO QUE SE HA TRASLADADO LOS TRIPULANTES A UN AVIÓON DEL MISMO MODELO
INSERT INTO AVION ((SELECT 'AJHS1128',DNI_PILOTO,DNI_COPILOTO,CAPACIDAD FROM AVION WHERE COD_AVION = '55qwerty3'));

--EL CLIENTE CON EL BILLETE CON COD = 'bill-10015' HA DECIDIDO COMPRAR OTRO BILLETE MÁS PERO CON EL ASIENTO DE AL LADO(SE PRESUPONE QUE ESTE ESTÁ LIBRE)
INSERT INTO BILLETE  (( SELECT 'bill-4872',DNI,COD_VUELO,COD_AEROL,ASINETO+1,CLASE FROM BILLETE WHERE COD_BILLETE = 'bill-10015'));

--DEBIDO A LA ALTA DEMANDA DE CLIENTES QUE QUIEREN VOLAR EN EL VUELO 'jujuju1125' SE HA VISTO CONVENIENTE PLANIFICAR OTRO VUELO IGUAL
INSERT INTO VUELO (( SELECT 'bill-7455', COD_AERO_ORIGEN, COD_AERO_DEST, 3,2, '55qwerty2', HORA_DESPEGUE, HORA_ATERRIZAJE, FECHA_VUELO FROM VUELO WHERE COD_VUELO = 'jujuju1125' ));